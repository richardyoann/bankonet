<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 	 	http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/aop                
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<context:component-scan base-package="com.bankonet" />
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<context:property-placeholder location="classpath:jdbc.properties" />
	<aop:aspectj-autoproxy />
	
	
	<bean id="htmlRreport" class="com.bankonet.report.ReportFactory"
		factory-method="createReport">
		<constructor-arg value="html"></constructor-arg>
	</bean>
	<bean id="pdfRreport" class="com.bankonet.report.ReportFactory"
		factory-method="createReport">
		<constructor-arg value="pdf"></constructor-arg>
	</bean>

	<bean id="reportService" class="com.bankonet.metier.ReportService"
		scope="prototype">
		<!-- Injection par setter ou se branche sur pdf -->
		<property name="r" ref="pdfRreport"></property>

		<!-- Injection par constructeur ou se branche sur html -->
		<constructor-arg index="0" ref="htmlRreport"></constructor-arg>
	</bean>

	<bean id="client" class="com.bankonet.model.Client" autowire="byName"
		scope="prototype">
		<property name="nom" value="RICHARD"></property>
		<property name="prenom" value="Yoann"></property>
		<property name="login" value="richardyoann"></property>
		<property name="mdp" value="Yoann"></property>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory">
			<ref bean="entityManagerFactory" />
		</property>
	</bean>


	<bean id="adresse" class="com.bankonet.model.Adresse" scope="prototype">
		<property name="numero" value="8"></property>
		<property name="rue" value="rue de la vieille lande"></property>
		<property name="ville" value="Saint-Alban"></property>
	</bean>

	<!-- Gestion de la connexion avec la bese MySQL bankonet, les informations 
		liées à la connexion se trouve dans le fichier jdbc.properties dans le src/main/resources -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	

	<!-- Gestion du persistance xml, qui fait reference au bean dataSource -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="MY_PU"></property>
		<property name="dataSource" ref="dataSource" />

		<!-- Scan tous les bean du package model afin de créer les tables avec 
			leurs relations dans la base de données -->
		<property name="packagesToScan">
			<list>
				<value>com.bankonet.model</value>
			</list>
		</property>
		<!-- Gestion du driver pour la connexion à la base ici mysql -->
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="generateDdl" value="true" />
				<property name="databasePlatform"
					value="org.eclipse.persistence.platform.database.MySQLPlatform" />
			</bean>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect" />
		</property>
		<!-- Gestion du mode de creation de la base ici dropand create -->
		<property name="jpaPropertyMap">
			<props>
				<prop key="eclipselink.weaving">static</prop>
				<prop key="eclipselink.ddl-generation ">create-tables</prop>
			</props>
		</property>
	</bean>

	<!-- Transfert du persistance dans le package DAO -->
	<!-- <bean id="dao" class="com.bankonet.dao.ClientDaoImpl">
		<property name="entityManager">
			<bean class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
				<property name="entityManagerFactory" ref="entityManagerFactory" />
			</bean>
		</property>
	</bean> -->

	<!-- Gestion des log -->
<!-- 	<bean id="profiler" class="com.bankonet.aspect.LogAspect" /> -->
	

</beans>
